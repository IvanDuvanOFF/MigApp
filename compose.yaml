version: '0.0.9'

services:
  app:
    container_name: app
    image: 'mig-api:latest'
    build:
      dockerfile: ./docker/dev/Dockerfile
      context: ./backend
    expose:
      - 8080
    depends_on:
      - db
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mig
      - SPRING_DATASOURCE_USERNAME=ivan
      - SPRING_DATASOURCE_PASSWORD=pASSword
    networks:
      app-network:
        ipv4_address: 192.168.112.3
      redis-network:
        ipv4_address: 192.168.128.3
    volumes:
      - type: bind
        source: ./tmp/mig-app/api
        target: /tmp/mig-app/api
    restart: on-failure:3

  db:
    image: 'postgres:15-alpine'
    command:
      - "postgres"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
    container_name: db
    environment:
      - POSTGRES_USER=ivan
      - POSTGRES_PASSWORD=pASSword
      - POSTGRES_DB=mig
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - type: bind
        source: ./tmp/mig-app/pgdata
        target: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ivan -d mig"]
      interval: 120s
      timeout: 10s
      retries: 3
      start_period: 90s
    networks:
      app-network:
        ipv4_address: 192.168.112.2
    restart: on-failure:5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    links:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: "ivan.duvanov.3@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "pASSword"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - type: volume
        source: pgadmin
        target: /var/lib/pgadmin
    ports:
      - "5050:80"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
    depends_on:
      - db
    networks:
      pg-network:
        ipv4_address: 192.168.144.2
      app-network:
        ipv4_address: 192.168.112.4
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      redis-network:
        ipv4_address: 192.168.128.2

  front:
    image: front
    build:
      dockerfile: ./docker/dev/Dockerfile
      context: ./kemsu-vue-app
    container_name: front
    depends_on:
      - app
    expose:
      - 3000
    networks:
      app-network:
        ipv4_address: 192.168.112.6

  nginx:
    container_name: nginx
    image: nginx:latest
    depends_on:
      - front
    ports:
      - 80:80
    volumes:
      - type: bind
        source: ./nginx/conf.d
        target: /etc/nginx/conf.d
    networks:
      app-network:
        ipv4_address: 192.168.112.5

networks:
  redis-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.128.0/20
          gateway: 192.168.128.1
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.112.0/20
          gateway: 192.168.112.1
  pg-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.144.0/20
          gateway: 192.168.144.1

volumes:
  pgadmin: