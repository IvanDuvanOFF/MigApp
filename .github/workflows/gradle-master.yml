name: Master CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test:
    name: Compile and test application

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grand executive permission for gradlew
        working-directory: ./backend
        run: chmod +x ./gradlew

      - name: Echo files
        working-directory: ./backend
        run: ls

      - name: Gradlew clean
        working-directory: ./backend
        run: ./gradlew clean

      - name: Gradlew test run
        id: test
        working-directory: ./backend
        run: ./gradlew test

      - name: Successful tests
        if: steps.test.outcome != 'success'
        run: |
          echo "Tests error"
          exit 1

      - name: Successful build
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ME }}
          token: ${{ secrets.TELEGRAM_NOT }}
          message: |
            ✅ Application build done
            Check report on https://github.com/IvanDuvanOFF/MigApp/actions

      - name: Send alert in Telegram
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ME }}
          token: ${{ secrets.TELEGRAM_NOT }}
          message: |
            ❌ Failed to build
            Check report on https://github.com/IvanDuvanOFF/MigApp/actions

  send-compose:
    name: Sends compose.yaml to server

    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v4
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: "./backend/compose.yaml"
          target: "/app/mig-api"

  docker-build:
    name: Build docker image and send it to DockerHub

    runs-on: ubuntu-latest
    needs:
      - send-compose

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grand executive permission for gradlew
        working-directory: ./backend
        run: chmod +x ./gradlew

      - name: Gradlew clean
        working-directory: ./backend
        run: ./gradlew clean

      - name: Gradlew bootable jar
        working-directory: ./backend
        run: ./gradlew bootJar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Dashboard to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/docker/dev/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

  deploy:
    name: Deploy project to server

    needs:
      - docker-build

    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          envs: DOCKERHUB_USER,DOCKER_IMAGE
          script: |
            echo "I am $DOCKERHUB_USERNAME"
            bash ./deploy.sh > log.txt